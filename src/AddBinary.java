public class AddBinary {
    
// В целом задача не особо трудная, нужно лишь просто сложить два двоичных числа.
// Можно, конечно, переводить два данных числа в 10чную систему исчесления и потом
// переводить результат суммы двух чисел из 10ной в 2ную СИ, но думаю
// можно сразу сделать проще и просто реализовать сложение столбиком для 2чных чисел.
// Думаю это будет намного проще, чем 1ый вариант.

// На этапе решения, возникла проблема с тем, что нужно наши a и b перевернуть
// А так же получившийся результат, так же развернуть

// Возможно проблему можно решить используя Рекурсию.
// Теперь нужно подумать, как же можно использовать рекурсию.

// Конечно, можно было бы использовать и перевызывать саму функцию, но мне
// не нравиться что он возвращает String и так же принимает String, String.
// Я бы хотел работать просто с char, а лучше даже с int.
// Так что думаю возможно создам новую рекурсивную функцию

// Подглядел немного в названиях решений. Названия решений, это итерации с конца,
// примерно то о чем я и думал. Думаю, нужно сперва реализовать итерации с конца, а уже потом
// на основе этого думать, можно ли сделать рекурсию/

// Так пришло решение как сделать итерацию с конца. Как только мы дойдем до начала любого числа
// то мы можем просто добавить остаток оставшегося числа добавить в начало.
// Так решаю это не на Си, поэтому над циклом while надо будет подумать.


// Ладно, брать число с конца, не могу придумать решение. Реализую начальное,
// просто буду переворачивать строки и все.

    private static String reversString(String str) {
        String res = "";
        for (int i = str.length() - 1; i >= 0; i--) {
            res += str.charAt(i);
        }
        return(res);
    }

    public static String addBinary(String a, String b) {
        // a = reversString(a);
        // b = reversString(b);

        int pa = a.length() - 1;
        int pb = b.length() - 1;
        int next = 0;
        String res = "";

        while (pa >= 0 || pb >= 0) {
            if (pb < 0) {
                next = a.charAt(pa) - 48 + next;
            } else if (pa < 0) {
                next = b.charAt(pb) - 48 + next;
            } else {
                next = (a.charAt(pa) + b.charAt(pb) - 96) + next;
            }
            
            if (next >= 2) {
                next = 1;
            } 
            res += next;
            pa--;
            pb--;
        }

        if (next == 1) {
            res += 1;
        }

        return res + ((next == 1) ? 1 : "");

    }

    public static void main(String[] args) {
        System.out.println(addBinary("1010", "1"));
    }
}
